version: "3.7"

networks:
  default:
    name: traff
    external: true

services:
  erp-app:
    container_name: "erp-api"
    build:
      context: .
      dockerfile: Dockerfile
    image: erp-api:latest
    ports:
      - "8080:8080"
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.erp-api.rule=Host(`erp-api.local`)"
    #   - "traefik.port=80"
    #   - "traefik.docker.network=traff"

    networks:
      - default
    environment:
      - POSTGRES_SSL_CERT=../certificate.pem
      - POSTGRES_DB_HOST=$POSTGRES_DB_HOST
      - POSTGRES_DB_PORT=$POSTGRES_DB_PORT
      - POSTGRES_DB_USER=$POSTGRES_DB_USER
      - POSTGRES_DB_PASSWORD=$POSTGRES_DB_PASSWORD
      - POSTGRES_DB_NAME=$POSTGRES_DB_NAME
      - EFACTURA_CLIENT_ID=$EFACTURA_CLIENT_ID
      - EFACTURA_CLIENT_SECRET=$EFACTURA_CLIENT_SECRET
      - EFACTURA_CALLBACK_URL=$EFACTURA_CALLBACK_URL
      - EFACTURA_CALLBACK_PATH=$EFACTURA_CALLBACK_PATH
      - EFACTURA_AUTHORIZATION_REDIRECT_URL=$EFACTURA_AUTHORIZATION_REDIRECT_URL
    #    depends_on:
    #      - erp-postgres
    env_file: ./.env


  erp-frontend:
    container_name: "erp-frontend"
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
       - "80:80"
    networks:
       - default
    # labels:
    #    - "traefik.enable=true"
    #    - "traefik.http.routers.erp-frontend.rule=Host(`erp.local`)"
    #    - "traefik.port=80"
    #    - "traefik.http.routers.erp-frontend.entrypoints=web"


