
type Partner{
    id: String!
    code: String
    type: String!
<<<<<<< HEAD
    company: Company
    active:Boolean!
=======
    active:Boolean!
    name: String!
    vat_number: String
    vat: Boolean!
    registration_number: String
    individual_number: String
    address: Address

>>>>>>> origin/dev
}


input PartnerInput{
    id: String
    code: String
    name: String!
    type: String!
    tax_id:String
    company_number:String
    personal_number:String
    is_active:Boolean
}

extend type Query {
<<<<<<< HEAD
    getPartners(input: GetPartnersInput!): [Partner] @isAuthenticated
=======
    getPartners: [Partner]
>>>>>>> origin/dev

}

extend type Mutation {
    savePartner(input: PartnerInput!): String @isAuthenticated
}
