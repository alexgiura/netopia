package handlers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	_err "backend/errors"
	"backend/graph/model"
	"context"
	"errors"
	"log"

	pgx "github.com/jackc/pgx/v4"
)

// GetRevenueChart is the resolver for the getRevenueChart field.
func (r *queryResolver) GetRevenueChart(ctx context.Context) ([]*model.ChartData, error) {
	rows, err := r.DBProvider.GetActualVsLastYearSales(ctx)
	if err != nil {
		if errors.Is(err, pgx.ErrNoRows) {
			return nil, nil
		}
		log.Print("\"message\":Failed to execute DBProvider.GetActualVsLastYearSales, "+"\"error\": ", err.Error())
		return nil, _err.Error(ctx, "NoRows", "DatabaseError")
	}

	chartDataList := make([]*model.ChartData, 0)
	for _, row := range rows {
		amountLastYear := row.AmountLastYear
		chartData := &model.ChartData{
			X:       row.Month,
			Y:       row.AmountThisYear,
			SecondY: &amountLastYear,
		}

		chartDataList = append(chartDataList, chartData)
	}
	return chartDataList, nil
}
