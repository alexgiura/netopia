name: Build and Deploy Testing

on:
  push:
    branches:
      - dev

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

    - name: Build Docker image for backend
      run: docker build -t neobytesolutions/erp-backend:dev -f backend/Dockerfile .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Push Docker image for backend
      run: docker push neobytesolutions/erp-backend:dev


  # build-frontend:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Set up Flutter
  #     uses: subosito/flutter-action@v1
  #     with:
  #       flutter-version: '3.22.2'

  #   - name: Navigate to frontend and build web
  #     run: |
  #       cd frontend
  #       flutter pub get
  #       flutter build web --release --web-renderer canvaskit

  #   - name: Build Docker image
  #     run: docker build -t neobytesolutions/erp-frontend:dev -f frontend/testing/Dockerfile .

  #   - name: Log in to Docker Hub
  #     run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

  #   - name: Push Docker image
  #     run: docker push neobytesolutions/erp-frontend:dev

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build-frontend, build-backend]
    
  #   steps:
  #     - name: Setup SSH Key
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa
  #         ssh-keyscan 159.223.234.127 >> ~/.ssh/known_hosts

  #     - name: Connect to server and stop and remove Specific Containers
  #       run: ssh -i ~/.ssh/id_rsa ubuntu@159.223.234.127 "ls -la && docker compose -f erp-insiders/backend/docker-compose.yml stop erp-app-dev erp-frontend-dev erp-backend-dev && docker compose -f erp-insiders/backend/docker-compose.yml rm -f erp-app-dev erp-frontend-dev erp-backend-dev"
      
  #     - name: Deploy to Server
  #       run: ssh -i ~/.ssh/id_rsa ubuntu@159.223.234.127 "docker pull neobytesolutions/erp-backend:dev && docker compose -f erp-insiders/backend/docker-compose.yml up -d erp-backend-dev erp-frontend-dev --remove-orphans"